===function conflict_check(stat, opp_stat)
    ~temp diff = stat - opp_stat
    {
        - (diff||(-1*diff)) >=30:
            {
            - roll_dice(20, 15):
                The conflict is end before it starts.
                {   
                    - diff > 0:
                        ~return true
                    - else:
                        ~Stress += 10
                        ~return false
                }
            }
        -else:
            ~temp thres = 6 + INT(diff/10.0)
            {
                - roll_dice(20, thres):
                    ~return true
                - else:
                    ~Stress += 2
                    ~return false
                        
            }
        
    }
    
===function flavour_events_checker()
    {
        - luck_checker():
            #Flavor event start
            
        
    }

===function roll_dice(range, thres)
    ~temp result = RANDOM(1, range)
    {   
        - thres > 1:
        {
            - result >= thres:
                ~return true
            
            - else:
                ~return false
        }
        
        - else:
            ~ return true
    }
    
===function common_end_checker()
    {
        - HealthCondition <= 0:
            Although the Lord giveth you the chance to survive, the fresh body you have can not endure physical torture anymore...
            ~return true
            
        - Stress >= 100:
            And if you gaze long into an abyss, the abyss also gazes into you. Clearly, the abyss gazes deeper...
            ~return true
            
        - Day > 25 and ConvertCount < 2:
            Maybe you haven't forgot the mission, but the mission forgets you. Without the power, you eternally trapped in the city.
            ~return true
            
    }


===function gold_checker()
    {   
        - Gold < 0:
            ~return "I am in debt... of {-Gold} Gold."
        
        - Gold == 0:
            ~return "I am pennyiless now. Hey, Bin, spare me some money!"
            
        - else:
            ~return "I still have {Gold} Gold."
    }

===function health_checker()
    {   
        - HealthCondition <= 25 and HealthCondition > 10:
            ~return "I need ambulance..."
        
        - HealthCondition <= 10:
            ~return "ASPIRINE ASPIRINE ASPIRINE ASPIRINE"
        
        - HealthCondition >= 75 and HealthCondition < 90:
            ~return "I am energtic now."
        
        - HealthCondition >= 90 and HealthCondition <= 100:
            ~return "POWEROVERWHELMING"
        
        - HealthCondition > 100:
            ~ activated_special_events += (Special_event_chain_activation)
            ~return "Faster, Higher, Stronger."
        
        - else:
            ~return "My condition is just so-so."
    }
    
===function stress_checker()
        ~temp stress_level = Stress / 20
    {   
        - stress_level == 0:
            ~return "I feel relaxed... so far..."
            
        - stress_level == 1:
            ~return "I need some ways to release my stress."
        
        - stress_level == 2:
            ~return "Dopamine could be my only friend."
        
        - stress_level == 3:
            ~return "Concentration...Concentration...Concent..."
        
        - stress_level == 4:
           ~ activated_special_events += (Special_event_chain_activation)
            ~return "***********!!!*****!**!*******!***..."

    }
    
===function faith_checker()
    {   
        - Faith <= 0: 
            ~ return "{TempName} is your follower already."
        
        - Faith > 0 and Faith <=25:
            ~ return "You can feel that {TempName} struggles to keep calm."
            
        - Faith > 25 and Faith <= 50:
            ~ return "{TempName} moves {DB_accusative(TempName)} eyes away..."
        
        - Faith > 50 and Faith <= 75:
            ~ return "{TempName} is still a hard to handle..."
            
        - Faith > 75 and Faith <= 100: 
            ~ return "{TempName}'s mind is determined."
    
    }




===function luck_checker()
        ~temp thres = 10 - Luck/15.0
        {
            - roll_dice(20, thres):
                ~return true
            - else:
                ~return false
        }
        
===function fame_checker()
    {   
        - Fame <= 25 and Fame > 10:
            ~return "Citizens regard me as cipher."
        
        - Fame <= 10:
            ~return "Furies from dwellers take my breath away."
        
        - Fame >= 75 and Fame < 90:
            ~return "I enjoy a good reputation here."
        
        - Fame >= 90 and Fame <= 100:
            ~return "People admire me as a Savior."
        
        - Fame > 100:
            ~ activated_special_events += (Special_event_chain_activation)
            ~return "This place is becoming my second hometown."
        - else:
            ~return "There is no particular gossips about me."
    }
    
===function special_event_checker()
    ~return false

===function time_checker()
    {Actions/2:
        - 5:
            ~ MyTime = morning
        - 4:
            ~ MyTime = noon
        - 3:
            ~ MyTime = afternoon
        - 2:
            ~ MyTime = dusk
        - 1:
            ~ MyTime = evening
        - 0:
            ~ MyTime = night
        - else:
            ~ MyTime = midnight
    }

===function pop_density()
    ~ return Population*1.0/LIST_COUNT(LIST_ALL(BasicLocation+SpecialLocation)) 
    
===function pop_checker()
    {BasicLocation has MyLoc:
        - true: 
            ~ return true
        - false:
            
        
    }
=== function full_list(list)
    {list:
        ~ temp entry = LIST_MIN(list)
        {entry}
        {
            - LIST_COUNT(list) > 2:
            <>, <>
            - LIST_COUNT(list) == 2:
            <> and <>
        }
        {full_list(list - entry)}
    }




===function underline_keys(key1,key2,key3)
    ~return "{key1}_{key2}_{key3}"
    
===function settlement(level,status,opp_status)
    ~ Interactions -= level
    ~ temp max = 1+ (INT(200/(10.0/level))*2)
    ~ temp judge = conflict_check(status, opp_status)
    {judge:   
        - true:
            ~ Faith -= RANDOM(INT(max/20),INT(max/3))
            ~ return "It works!"
        - false:
            ~ return "It far from satisfactory..."
    }
